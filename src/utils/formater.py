from src.database.settings_data import UserSurvey

async def format_user_survey_results(
    user_id: int, username: str, survey: UserSurvey
) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ä–æ—Å–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Args:
        user_id (int): –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—à–µ–ª –æ–ø—Ä–æ—Å.
        username (str): –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ @username.
        survey (UserSurvey): –û–±—ä–µ–∫—Ç, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    Returns:
        str: –°—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ä–æ—Å–∞, –≤–∫–ª—é—á–∞—è 
              –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∏—Ö –æ—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã.
    """
    message = f"üìã –ù–æ–≤—ã–π –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π –æ–ø—Ä–æ—Å\n"
    message += f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n\n"
    message += f"üë§ –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: {user_id}\n\n"
    message += "üìù –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã:\n\n"

    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏
    answers = {
        "region": ("–í –∫–∞–∫–æ–º —Ä–µ–≥–∏–æ–Ω–µ?", survey.region),
        "has_business": ("–ï—Å—Ç—å –ª–∏ –ò–ü/–°–∞–º–æ–∑–∞–Ω—è—Ç–æ—Å—Ç—å?", survey.has_business),
        "is_under_25": ("–ú–ª–∞–¥—à–µ 25 –ª–µ—Ç?", survey.is_under_25),
        "has_experience": ("–ï—Å—Ç—å –æ–ø—ã—Ç –∏–ª–∏ –Ω–∞–≤—ã–∫–∏?", survey.has_experience),
        "official_income": ("–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥", survey.official_income),
        "work_plan": ("–ü–ª–∞–Ω —Ä–∞–±–æ—Ç—ã", survey.work_plan),
        "micro_result": ("–ú–∏–∫—Ä–æ—Ä–µ–∑—É–ª—å—Ç–∞—Ç", survey.micro_result),
        "subsidy_interest": ("–ò–Ω—Ç–µ—Ä–µ—Å –∫ —Å—É–±—Å–∏–¥–∏–∏", survey.subsidy_interest),
        "desired_outcome": ("–ñ–µ–ª–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç", survey.desired_outcome),
        "importance_level": ("–í–∞–∂–Ω–æ—Å—Ç—å —à–∞–Ω—Å–æ–≤", survey.importance_level),
        "investment_readiness": (
            "–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å",
            survey.investment_readiness,
        ),
    }


    for (question_text, answer) in answers.items():
        if answer:  
            message += f"‚ùì {question_text}\n"
            message += f"‚úÖ {answer}\n\n"

    return message.replace("_", "\\_").replace(
        "*", "\\*"
    )  
