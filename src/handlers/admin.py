from src.config.config import settings
from aiogram import Router, types
from aiogram.filters import Command
from src.utils.logging import write_logs
from src.keyboards.inlinebutton import new_message, get_admin_keyboard
from src.utils.localization import MESSAGES
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

router = Router(name=__name__)


class AdminStates(StatesGroup):
    WAITING_PASSWORD = State()

@router.message(Command("admin"))
async def handle_admin_command(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

    Args:
        message (types.Message): –°–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –∫–æ–º–∞–Ω–¥—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.

    Returns:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç, –Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    user_id = message.from_user.id
    
    if user_id not in settings.config.admins.admins:
        await write_logs("warning", f"Unauthorized access attempt by {user_id}")
        await new_message(message, MESSAGES['ru']['access_denied'], None)
        return
    
    await state.set_state(AdminStates.WAITING_PASSWORD)
    await new_message(message, MESSAGES['ru']['enter_password'], None)

@router.message(AdminStates.WAITING_PASSWORD)
async def handle_password_input(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.

    Args:
        message (types.Message): –°–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.

    Returns:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç, –Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    user_id = message.from_user.id
    input_password = message.text
    
    if input_password == settings.config.ADMIN_PASSWORD:
        await write_logs("info", f"Admin access granted for {user_id}")
        await new_message(
            message,
            MESSAGES['ru']['admin_msg'],
            await get_admin_keyboard()
        )
        await state.clear()
    else:
        await write_logs("warning", f"Wrong password attempt by {user_id}")
        await new_message(message, MESSAGES['ru']['wrong_password'], None)


@router.callback_query(lambda c: c.data == "admin_stats")
async def process_stats_button(callback_query: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.

    Args:
        callback_query (types.CallbackQuery): –û–±—ä–µ–∫—Ç CallbackQuery, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.

    Returns:
        None: –§—É–Ω–∫—Ü–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç, –Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π.
    """
    user_id = callback_query.from_user.id
    if user_id in settings.config.admins.admins:
        # –ó–¥–µ—Å—å –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à—É –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        await callback_query.message.edit_text(
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n" +
            "–ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            reply_markup=await get_admin_keyboard()
        )
    await callback_query.answer()